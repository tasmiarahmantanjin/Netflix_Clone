{"version":3,"sources":["Nav.js","axios.js","Requests.js","Banner.js","Row.js","screens/HomeScreen.js","firebase.js","screens/SignUpScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/PlanScreen.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","handleShow","history","useHistory","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","id","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignUpScreen","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","catch","error","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlanScreen","products","setProducts","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","where","productDoc","docs","price","prices","priceId","priceData","loadCheckOut","add","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","loadStripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","productID","productData","isCurrentPackage","toLowerCase","includes","description","ProfileScreen","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbc5a9a0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport \"./Nav.css\"\n\nfunction Nav() {\n\tconst [show, handleShow] = useState(false);\n\tconst history = useHistory()\n\n\t// Function for Navbar Transition\n\tconst transitionNavbar = () => {\n\t\tif (window.scrollY > 100){\n\t\t\thandleShow(true)\n\t\t} else {\n\t\t\thandleShow(false)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", transitionNavbar)\n\t\treturn () => window.removeEventListener(\"scroll\", transitionNavbar)\n\t}, [])\n\n\treturn (\n\t\t<div className={`nav ${show && `nav__black`}`}>\n\t\t\t<div className=\"nav__contents\">\n\t\t\t\t<img\n\t\t\t\t\tonClick={() => history.push(\"/\")}\n\t\t\t\t\tclassName=\"nav__logo\"\n\t\t\t\t\tsrc=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\n\t\t\t\t\talt=\"\" />\n\n\t\t\t\t<img\n\t\t\t\t\tonClick={() => history.push(\"/profile\")}\n\t\t\t\t\tclassName=\"avatar__logo\"\n\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n\t\t\t\t\talt=\"\" />\n\t\t\t</div>\n\n\t\t</div>\n\t)\n}\n\nexport default Nav\n","import axios from 'axios'\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3'\n});\n\nexport default instance;","// Store the APU Key\n//Typically we need to store in {process.env.API_KEY}\n\nconst API_KEY = \"fc256b019faf89abcab5dbcb915bc762\";\n\nconst requests = {\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useEffect, useState } from 'react'\nimport './Banner.css'\nimport axios from './axios'\nimport requests from './Requests'\n\n\nfunction Banner() {\n\tconst [movie, setMovie] = useState([])\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(requests.fetchNetflixOriginals);\n\t\t\tsetMovie(\n\t\t\t\trequest.data.results[\n\t\t\t\t\tMath.floor(Math.random() * request.data.results.length - 1)\n\t\t\t\t]\n\t\t\t)\n\t\t\treturn request;\n\t\t}\n\n\t\tfetchData();\n\t}, [])\n\n\tconsole.log(movie);\n\n\tfunction truncate(string, n) {\n\t\treturn string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n\t}\n\n\t// function truncate(string, n) {\n\t// \treturn string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n\t//   }\n\n\treturn (\n\t\t<header className=\"banner\" style={{\n\t\t\tbackgroundSize: \"cover\",\n\t\t\tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n\t\t\tbackgroundPosition: \"center center\",\n\t\t}}>\n\t\t\t<div className=\"banner__contains\">\n\t\t\t\t<h1 className=\"banner__title\">\n\t\t\t\t\t{movie?.title || movie?.name || movie?.original_name}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"banner_buttons\">\n\t\t\t\t\t<button className=\"banner_button\">Play</button>\n\t\t\t\t\t<button className=\"banner_button\">My List</button>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"banner__description\">\n\t\t\t\t\t{truncate(movie?.overview, 100)}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"banner--fadeBottom\" />\n\t\t</header>\n\t)\n}\n\nexport default Banner\n","import axios from './axios';\nimport React, { useState, useEffect } from 'react'\n// import requests from './Requests';\nimport \"./Row.css\";\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n\tconst [movies, setMovies] = useState([]);\n\n\tconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\n\t\tfetchData();\n\t}, [fetchUrl])\n\n\t// console.log(movies);\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<h2>{title}</h2>\n\n\t\t\t<div className=\"row__posters\">\n\t\t\t\t{movies.map(\n\t\t\t\t\t(movie) =>\n\t\t\t\t\t\t((isLargeRow && movie.poster_path) ||\n\t\t\t\t\t\t\t(!isLargeRow && movie.backdrop_path)) && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\tsrc={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default Row\n","import React from 'react'\nimport \"./HomeScreen.css\"\nimport Nav from \"../Nav\";\nimport Banner from \"../Banner\";\nimport requests from '../Requests';\nimport Row from \"../Row\";\n\nfunction HomeScreen() {\n\treturn (\n\t\t<div className=\"homeScreen\">\n\t\t\t<Nav />\n\t\t\t<Banner />\n\t\t\t<Row\n\t\t\t\ttitle=\"NETFLIX ORIGINAL\"\n\t\t\t\tfetchUrl={requests.fetchNetflixOriginals}\n\t\t\t\tisLargeRow\n\t\t\t/>\n\t\t\t<Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n\t\t\t<Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n\t\t\t<Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n\t\t\t<Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n\t\t\t<Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n\t\t\t<Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n\t\t\t<Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\t\t</div>)\n}\n\nexport default HomeScreen\n","import firebase from 'firebase'\n\n\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyDqmTn-ziKmNSUFhoi1h3dfNME2Ixl-ad4\",\n\tauthDomain: \"netflix-clone-12de9.firebaseapp.com\",\n\tprojectId: \"netflix-clone-12de9\",\n\tstorageBucket: \"netflix-clone-12de9.appspot.com\",\n\tmessagingSenderId: \"223763366143\",\n\tappId: \"1:223763366143:web:8e8f8bf9d7eaa9f6ffccca\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n\n  export { auth };\n  export default db;","import React, { useRef } from 'react'\nimport { auth } from '../firebase'\nimport './SignUpScreen.css'\n\nfunction SignUpScreen() {\n\tconst emailRef = useRef(null);\n\tconst passwordRef = useRef(null);\n\n\tconst register = (e) => {\n\t\te.preventDefault();\n\n\t\tauth\n\t\t.createUserWithEmailAndPassword(\n\t\t\temailRef.current.value,\n\t\t\tpasswordRef.current.value\n\t\t)\n\t\t.then((authUser) => {\n\t\t\tconsole.log(authUser);\n\t\t})\n\t\t.catch((error) => {\n\t\t\talert(error.message)\n\t\t})\n\t};\n\n\n\tconst signIn = (e) => {\n\t\te.preventDefault();\n\n\t\tauth\n\t\t.signInWithEmailAndPassword(\n\t\t\temailRef.current.value,\n\t\t\tpasswordRef.current.value\n\t\t)\n\t\t.then((authUser) => {\n\t\t\tconsole.log(authUser);\n\t\t})\n\t\t.catch((error) => {\n\t\t\talert(error.message)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"signupScreen\">\n\t\t\t<form>\n\t\t\t\t<h1>Sign In</h1>\n\t\t\t\t<input ref={emailRef} type=\"email\" placeholder=\"Email\"/>\n\t\t\t\t<input ref={passwordRef} type=\"password\" placeholder=\"Password\"/>\n\t\t\t\t<button type=\"submit\" onClick={signIn}>Sign In</button>\n\t\t\t\t<h4>\n\t\t\t\t\t<span className=\"signupScreen__gray\">New to Netflix? </span>\n\t\t\t\t\t<span className=\"signupScreen__link\" onClick={register}>Sign Up Now.</span>\n\t\t\t\t\t\n\t\t\t\t</h4>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default SignUpScreen\n","import React, { useState } from 'react'\nimport './LoginScreen.css'\nimport SignUpScreen from './SignUpScreen'\n\n\nfunction LoginScreen() {\n\tconst [signIn, setSignIn] = useState(false);\n\n\treturn (\n\t\t<div className=\"loginScreen\">\n\t\t\t<div className=\"loginScreen__background\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"loginScreen__logo\"\n\t\t\t\t\tsrc=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\n\t\t\t\t\talt=\"\" />\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSignIn(true)}\n\t\t\t\t\tclassName=\"loginScreen_button\">Sign In\n\t\t\t\t</button>\n\n\t\t\t\t<div className=\"loginScreen__gradient\" />\n\n\t\t\t\t<div className=\"loginScreen__body\">\n\t\t\t\t\t{signIn ? (\n\t\t\t\t\t\t<SignUpScreen />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h1>Ultimate films, TV programs and more</h1>\n\n\t\t\t\t\t\t\t\t<h2>Watch anywhere, Cancel anytime</h2>\n\n\t\t\t\t\t\t\t\t<h3>Ready to watch? Enter your email to create or restart your membership</h3>\n\n\t\t\t\t\t\t\t\t<div className=\"loginScreen__input\">\n\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" />\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setSignIn(true)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"loginScreen__getStarted\">GET STARTED\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default LoginScreen\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport db from '../firebase';\nimport './PlanScreen.css'\nimport { loadStripe } from '@stripe/stripe-js';\n\nfunction PlanScreen() {\n\tconst [products, setProducts] = useState([]);\n\tconst user = useSelector(selectUser);\n\tconst [subscription, setSubscription] = useState(null);\n\n\tuseEffect(() => {\n\t\tdb.collection(\"customers\")\n\t\t\t.doc(user.uid)\n\t\t\t.collection(\"subscriptions\")\n\t\t\t.get()\n\t\t\t.then(querySnapshot => {\n\t\t\t\tquerySnapshot.forEach(async (subscription) => {\n\t\t\t\t\tsetSubscription({\n\t\t\t\t\t\trole: subscription.data().role,\n\t\t\t\t\t\tcurrent_period_end: subscription.data().current_period_end.seconds,\n\t\t\t\t\t\tcurrent_period_start: subscription.data().current_period_start.seconds,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t}, [user.uid]);\n\n\tuseEffect(() => {\n\t\tdb.collection('products')\n\t\t.where('active', '==', true)\n\t\t.get()\n\t\t.then((querySnapshot) => {\n\t\t\tconst products = {};\n\t\t\tquerySnapshot.forEach(async productDoc => {\n\t\t\t\tproducts[productDoc.id] = productDoc.data();\n\t\t\t\tconst priceSnap = await productDoc.ref.collection('prices').get();\n\t\t\t\tpriceSnap.docs.forEach(price => {\n\t\t\t\t\tproducts[productDoc.id].prices = {\n\t\t\t\t\t\tpriceId: price.id,\n\t\t\t\t\t\tpriceData: price.data()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\tsetProducts(products)\n\t\t});\n\t}, [])\n\n\t// console.log(products);\n\tconsole.log(subscription);\n\n\tconst loadCheckOut = async (priceId) => {\n\t\tconst docRef = await \n\t\tdb.collection('customers')\n\t\t.doc(user.uid)\n\t\t.collection(\"checkout_sessions\")\n\t\t.add({\n\t\t\tprice: priceId,\n\t\t\tsuccess_url: window.location.origin,\n\t\t\tcancel_url: window.location.origin\n\t\t});\n\n\t\tdocRef.onSnapshot(async (snap) => {\n\t\t\tconst { error, sessionId } = snap.data();\n\n\t\t\tif (error) {\n\t\t\t\t// Show an error to your customer and \n\t\t\t\t// inspect your Cloud functions logs in the firebase console.\n\t\t\t\talert(`Oops something is wrong! ${error.message}`)\n\t\t\t}\n\n\t\t\tif (sessionId) {\n\t\t\t\t// we have a session, let's redirect to CheckOut\n\t\t\t\t// Init Stripe\n\n\t\t\t\tconst stripe = await loadStripe('pk_test_51IHlreDWEy5nFASvThKHbkJz19WsX7GnOiED8RMkA0fDZA3SaKhoEjQgxm8cBMWAcsrWzcAZwit04yOPP8HMKIeU00LKefXzbl');\n\t\t\t\tstripe.redirectToCheckout({ sessionId });\n\t\t\t}\n\t\t})\n\t};\n\n\treturn (\n\t\t<div className=\"planScreen\">\n\t\t\t<br />\n\t\t\t{subscription && (\n\t\t\t\t<p>\n\t\t\t\t\tRenewal Date:{\" \"}\n\t\t\t\t\t{new Date\n\t\t\t\t\t\t(subscription?.current_period_end * 1000)\n\t\t\t\t\t\t.toLocaleDateString()}\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t{Object.entries(products).map(([productID, productData]) => {\n\t\t\t\tconst isCurrentPackage = productData.name\n\t\t\t\t?.toLowerCase()\n\t\t\t\t.includes(subscription?.role);\n\n\t\t\t\treturn(\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={productID}\n\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\tisCurrentPackage && \"planScreen__plan--disabled\"\n\t\t\t\t\t\t\t} planScreen__plan`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"planScreen__info\">\n\t\t\t\t\t\t\t<h5>{productData.name}</h5>\n\t\t\t\t\t\t\t<h6>{productData.description}</h6>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t!isCurrentPackage && loadCheckOut(productData.prices.priceId)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default PlanScreen;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../features/userSlice'\nimport { auth } from '../firebase'\nimport Nav from '../Nav'\nimport PlanScreen from './PlanScreen'\nimport './ProfileScreen.css'\n\nfunction ProfileScreen() {\n\tconst user = useSelector(selectUser)\n\treturn (\n\t\t<div className=\"profileScreen\">\n\t\t\t<Nav />\n\t\t\t<div className=\"profileScreen__body\">\n\t\t\t\t<h1>Edit Profile</h1>\n\t\t\t\t<div className=\"profileScreen__info\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"profileScreen__details\">\n\t\t\t\t\t\t<h2>{user.email}</h2>\n\t\t\t\t\t\t<div className=\"profileScreen__plans\">\n\t\t\t\t\t\t\t<h3>Plans</h3>\n\n\t\t\t\t\t\t\t<PlanScreen />\n\t\t\t\t\t\t\t<button onClick={() => auth.signOut()} className=\"profileScreen__signOut\">Sign Out</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ProfileScreen\n","import React, { useEffect } from 'react';\r\n// import { Counter } from './features/counter/Counter';\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        // Logged in\r\n        console.log(userAuth);\r\n        dispatch(login({\r\n          uid: userAuth.uid,\r\n          email: userAuth.email\r\n        })\r\n\r\n        );\r\n      } else {\r\n        // Logged Out\r\n        dispatch(logout());\r\n      }\r\n    })\r\n\r\n    return unsubscribe;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n            <Switch>\r\n              <Route path=\"/profile\">\r\n                <ProfileScreen />\r\n              </Route>\r\n\r\n              <Route path=\"/\">\r\n                <HomeScreen />\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}